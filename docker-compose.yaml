version: '3.9'

name: mio-example

services:
  minio: # https://hub.docker.com/r/bitnami/minio
    image: bitnami/minio:2024.5.28-debian-12-r0
    network_mode: host
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - ${CACHE_DIR:-./cache}/volumes/minio/data:/bitnami/minio/data
    user: '0:0'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 10s # Adjusted interval
      timeout: 20s # Keep the timeout to allow for a slow response
      retries: 5 # Increased retries to allow MinIO to fully initialize
      start_period: 30s # Add a start period to give MinIO enough time to start

  createbuckets:
    image: minio/mc
    network_mode: host
    restart: on-failure # Only restart if the container fails
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://localhost:9000 ${MINIO_ACCESS_KEY:-minioadmin} ${MINIO_SECRET_KEY:-minioadmin} || exit 1;
      /usr/bin/mc mb myminio/somebucketname;
      /usr/bin/mc policy set public myminio/somebucketname;
      exit 0;
      "
